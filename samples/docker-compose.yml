version: '3'
services:
  sql:
    image: microsoft/mssql-server-linux:latest
    ports:
      - "5005:1433"
    environment:
      SA_PASSWORD: "Password1"
      ACCEPT_EULA: "Y"
    container_name: bolton-sql-container
    networks:
      - bolton-network
  rabbitmq:
    image: rabbitmq:3.8.2-management
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: bolton-rabbitmq-container
    # volumes:
    #   - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.config
    networks:
      - bolton-network
  # console:
  #   depends_on:
  #     - rabbitmq
  #     - sql
  #   build:
  #     context: ./
  #     dockerfile: Dockerfile.Console
  #   container_name: bolton-console-container
  #   networks:
  #     - bolton-network
  api:
    build:
      context: ./
      dockerfile: Dockerfile.WebApi
    ports:
      - "5000:80"
    container_name: bolton-api-container
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - rabbitmq
      - sql
      # - console
    networks:
      - bolton-network

# if services are in the same network, services can connect using the container name like bolton-sql-container 
# in the connection string
networks: 
  bolton-network:

# d detached mode or background mode
# docker-compose up -d

# to rebuild images
# docker-compose up -d --build 

# --rmi remove local images
# docker-compose down --rmi local

# to connect to the sql server from SSMS, use 127.0.0.1, 5005